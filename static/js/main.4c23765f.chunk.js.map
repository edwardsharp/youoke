{"version":3,"sources":["pages/Landing.tsx","hooks.ts","youtube.ts","pages/Room.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["KNOWN_ROOMS","name","href","Landing","props","setRoom","useState","addNewRoom","setAddNewRoom","newRoom","setNewRoom","roomsToFind","setRoomsToFind","roomList","setRoomList","delay","setDelay","callback","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","length","forEach","room","ws","WebSocket","Promise","resolve","reject","onerror","error","onopen","success","close","testWS","then","console","log","prev","roomsToFindClone","idx","indexOf","splice","catch","warn","className","undefined","tabIndex","onClick","e","type","onChange","target","value","placeholder","find","r","map","_","YT_API_KEY","process","QSinger","qid","singer","qSinger","renameSinger","setRenameSinger","newSinger","setNewSinger","onKeyDown","key","Room","wsStatus","setWsStatus","queue","setQueue","qSongId","setQSongId","localStorage","getItem","setSinger","editSinger","setEditSinger","searchQ","setSearchQ","showSearchResults","setShowSearchResults","searchResults","setSearchResults","library","setLibrary","showIdInput","setShowIdInput","showSearchInput","setShowSeachInout","ytSearchResulta","setYtSearchResults","handleWsMessage","message","data","JSON","parse","sendWsMessage","msg","send","stringify","q","Queue","qPosition","position","QueueSetPosition","QueueSetSinger","onclose","onmessage","fResults","filter","item","title","toLowerCase","includes","document","getElementById","scrollIntoView","debounceYtSearch","useCallback","debounce","params","URLSearchParams","part","maxResults","fetch","toString","response","json","result","items","youtubeSearch","results","test","url","URL","v","searchParams","get","path","pathname","replace","autoFocus","onFocus","videoId","src","snippet","thumbnails","default","setItem","onBlur","DeQueue","status","App","lRoom","setAppRoom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c23765f.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport { IRoom } from './Room'\nimport useInterval from '../hooks'\nimport './Landing.css'\n\nexport interface LandingProps {\n  setRoom: (room: IRoom) => void\n}\n\ntype RoomList = IRoom[]\n\nconst KNOWN_ROOMS: RoomList = [{ name: 'LOCALHOST', href: 'localhost:9001' }]\n\nfunction testWS(href: string): Promise<boolean> {\n  const ws = new WebSocket(`ws://${href}`)\n\n  return new Promise((resolve, reject) => {\n    ws.onerror = (error) => reject(false)\n    ws.onopen = (success) => {\n      ws.close()\n      resolve(true)\n    }\n  })\n}\n\nexport default function Landing(props: LandingProps) {\n  const { setRoom } = props\n\n  const [addNewRoom, setAddNewRoom] = useState(false)\n  const [newRoom, setNewRoom] = useState<IRoom>(KNOWN_ROOMS[0])\n  const [roomsToFind, setRoomsToFind] = useState(KNOWN_ROOMS)\n  const [roomList, setRoomList] = useState<RoomList>()\n  const [delay, setDelay] = useState<number | null>(1000)\n\n  useInterval(\n    () => {\n      if (roomsToFind.length === 0) {\n        setDelay(null)\n        return\n      }\n      roomsToFind.forEach((room) => {\n        testWS(room.href)\n          .then(() => {\n            console.log('zomg FOUND room!', room)\n            setRoomList((prev) => [...(prev ? prev : []), room])\n            const roomsToFindClone = [...roomsToFind]\n            const idx = roomsToFindClone.indexOf(room)\n            if (idx > -1) {\n              roomsToFindClone.splice(idx, 1)\n              setRoomsToFind(roomsToFindClone)\n            }\n          })\n          .catch(() => {\n            console.warn('onoz, bad room!', room)\n          })\n      })\n\n      const newDelay = delay ? (delay < 15000 ? delay + 1000 : delay) : 0\n      setDelay(newDelay)\n    },\n    // delay in milliseconds or null to stop it\n    delay\n  )\n\n  return (\n    <div className=\"box\">\n      <h1 className=\"youoke\">YOUOKE</h1>\n      <div className=\"list\">\n        <h2>- - - JOIN ROOM - - -</h2>\n        <ol>\n          <li\n            className={addNewRoom ? undefined : 'list-btn'}\n            tabIndex={0}\n            onClick={(e) => !addNewRoom && setAddNewRoom(true)}\n          >\n            {addNewRoom ? (\n              <>\n                <label>\n                  name\n                  <input\n                    type=\"text\"\n                    onChange={(e) =>\n                      setNewRoom((prev) => ({ ...prev, name: e.target.value }))\n                    }\n                    value={newRoom.name}\n                    placeholder=\"name\"\n                  />\n                </label>\n                <label>\n                  href\n                  <input\n                    type=\"text\"\n                    onChange={(e) =>\n                      setNewRoom((prev) => ({ ...prev, href: e.target.value }))\n                    }\n                    value={newRoom.href}\n                    placeholder=\"href\"\n                  />\n                </label>\n\n                <div className=\"btn-row\">\n                  <div\n                    className=\"btn\"\n                    onClick={(e) => {\n                      setRoomsToFind((prev) => {\n                        if (\n                          prev.find(\n                            (r) =>\n                              r.name === newRoom.name && r.href === newRoom.href\n                          )\n                        ) {\n                          return prev\n                        }\n\n                        return [...prev, newRoom]\n                      })\n                      // reset inputz?\n                      // setNewRoom(KNOWN_ROOMS[0])\n                      setAddNewRoom(false)\n                    }}\n                  >\n                    add new room\n                  </div>\n\n                  <div\n                    className=\"btn\"\n                    onClick={(e) => {\n                      setAddNewRoom(false)\n                    }}\n                  >\n                    x\n                  </div>\n                </div>\n              </>\n            ) : (\n              'find room...'\n            )}\n          </li>\n\n          {!roomList\n            ? 'looking for rooms...'\n            : roomList.map((room, idx) => (\n                <li\n                  className=\"list-btn\"\n                  key={`${room}${idx}`}\n                  tabIndex={idx}\n                  onClick={(_) => {\n                    setRoom(room)\n                    setDelay(null)\n                  }}\n                >\n                  {room.name}\n                </li>\n              ))}\n        </ol>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    if (delay === null) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n","const YT_API_KEY = process.env.YT_API_KEY || 'AIzaSyBRCfrDIH2BmDoYz7f-lwAnEi1Dw1yYC_M'\n\nexport interface SearchResult {\n  items: YTSearchItem[];\n  etag: string;\n  kind: string;\n  nextPageToken: string;\n  pageInfo: PageInfo;\n  regionCode: string;\n}\nexport interface PageInfo {\n  totalResults: number;\n  resultsPerPage: number;\n}\nexport interface YTSearchItem {\n  kind: string;\n  etag: string;\n  id: Id;\n  snippet: Snippet;\n}\nexport interface Id {\n  kind: string;\n  videoId: string;\n}\nexport interface Snippet {\n  publishedAt: string;\n  channelId: string;\n  title: string;\n  description: string;\n  thumbnails: Thumbnails;\n  channelTitle: string;\n  liveBroadcastContent: string;\n  publishTime: string;\n}\nexport interface Thumbnails {\n  default: DefaultOrMediumOrHigh;\n  medium: DefaultOrMediumOrHigh;\n  high: DefaultOrMediumOrHigh;\n}\nexport interface DefaultOrMediumOrHigh {\n  url: string;\n  width: number;\n  height: number;\n}\n\nexport default function youtubeSearch(q: string): Promise<YTSearchItem[]>{\n  if(!q || q.length === 0){\n    console.log('no search q, gonna return []')\n    return Promise.resolve([])\n  }\n  const params = new URLSearchParams({\n   q,\n   part: \"snippet\",\n   maxResults: '25',\n   key: YT_API_KEY\n  })\n\n  return fetch(`https://www.googleapis.com/youtube/v3/search?${params.toString()}`)\n  .then( response => response.json() )\n  .then( (result: SearchResult) => {\n    console.log('zomg youtube resultz! data:',result)\n    return result.items\n  }).catch( error => {\n    console.warn('onoz! youtube search caught error:',error)\n    return []\n  })\n}\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport debounce from 'lodash.debounce'\n\nimport './Room.css'\nimport youtubeSearch, { YTSearchItem } from '../youtube'\n\nexport interface IRoom {\n  name: string\n  href: string\n}\n\nexport interface RoomProps {\n  room: IRoom\n  setRoom: (room?: IRoom) => void\n}\n\nexport interface QueueRequest {\n  Queue: {\n    id: string\n    singer: string\n  }\n}\nexport interface QueueSetPosition {\n  QueueSetPosition: { id: string; position: number }\n}\nexport interface DeQueue {\n  DeQueue: { id: string }\n}\nexport interface QueueSetSinger {\n  QueueSetSinger: { id: string; singer: string }\n}\nexport type PlayerRequest = 'PlayerPause' | 'PlayerPlay' | 'PlayerSkip'\nexport type LibraryRequest = 'GetLibrary'\ntype Request =\n  | QueueRequest\n  | QueueSetPosition\n  | QueueSetSinger\n  | DeQueue\n  | PlayerRequest\n  | LibraryRequest\n\ninterface QueueItem {\n  duration: number\n  filepath: string\n  id: string\n  singer: string\n  status: string\n  title: string\n}\n\ninterface LibraryItem {\n  id: string\n  title: string\n  duration: number\n}\n\nfunction QSinger(props: {\n  qid: string\n  singer: string\n  qSinger: (id: string, singer: string) => void\n}) {\n  const { qid, singer, qSinger } = props\n\n  const [renameSinger, setRenameSinger] = useState(false)\n  const [newSinger, setNewSinger] = useState(singer)\n\n  return (\n    <div\n      className=\"flex-grow\"\n      onClick={(e) => !renameSinger && setRenameSinger(true)}\n    >\n      {renameSinger ? (\n        <>\n          <input\n            type=\"text\"\n            value={newSinger}\n            onChange={(e) => setNewSinger(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                qSinger(qid, newSinger)\n                setRenameSinger(false)\n              } else if (e.key === 'Escape') {\n                setRenameSinger(false)\n              }\n            }}\n          />\n        </>\n      ) : (\n        singer\n      )}\n    </div>\n  )\n}\n\nexport default function Room(props: RoomProps) {\n  const { room, setRoom } = props\n\n  const ws = useRef<WebSocket | null>(null)\n  const [wsStatus, setWsStatus] = useState<'open' | 'closed'>('closed')\n  const [queue, setQueue] = useState<QueueItem[]>()\n  const [qSongId, setQSongId] = useState('')\n  const [singer, setSinger] = useState(\n    () => localStorage.getItem('singer') || 'nobody'\n  )\n  const [editSinger, setEditSinger] = useState(false)\n  const [searchQ, setSearchQ] = useState('')\n  const [showSearchResults, setShowSearchResults] = useState(false)\n  const [searchResults, setSearchResults] = useState<LibraryItem[]>([])\n  const [library, setLibrary] = useState<LibraryItem[]>(() => [])\n  const [showIdInput, setShowIdInput] = useState(false)\n  const [showSearchInput, setShowSeachInout] = useState(false)\n  const [ytSearchResulta, setYtSearchResults] = useState<YTSearchItem[]>([])\n\n  function handleWsMessage(message: WebSocketEventMap['message']) {\n    try {\n      const data = JSON.parse(message.data)\n      console.log('got ws data', data)\n      if (data.queue) {\n        setQueue(data.queue)\n      } else if (data.library) {\n        setLibrary(data.library)\n        setSearchResults(data.library)\n      }\n    } catch (e) {\n      console.warn(\n        'onoz, caught error in handleWsMessage:',\n        e,\n        ' message:',\n        message.data\n      )\n    }\n  }\n\n  function sendWsMessage(msg: Request) {\n    ws.current && ws.current.send(JSON.stringify(msg))\n  }\n\n  function q(id: string) {\n    sendWsMessage({\n      Queue: {\n        id,\n        singer,\n      },\n    })\n  }\n\n  function deQ(id: string) {\n    sendWsMessage({\n      DeQueue: {\n        id,\n      },\n    })\n  }\n\n  function qPosition(id: string, position: number) {\n    sendWsMessage({\n      QueueSetPosition: {\n        id,\n        position,\n      },\n    })\n  }\n\n  function qSinger(id: string, singer: string) {\n    sendWsMessage({\n      QueueSetSinger: {\n        id,\n        singer,\n      },\n    })\n  }\n\n  useEffect(() => {\n    ws.current = new WebSocket(`ws://${room.href}`)\n    ws.current.onopen = () => {\n      setWsStatus('open')\n      sendWsMessage('GetLibrary')\n    }\n    ws.current.onclose = () => setWsStatus('closed')\n    ws.current.onmessage = handleWsMessage\n\n    return () => {\n      ws.current && ws.current.close()\n    }\n  }, [room.href])\n\n  useEffect(() => {\n    const fResults = library.filter((item) =>\n      item.title.toLowerCase().includes(searchQ.toLowerCase())\n    )\n    setSearchResults(fResults)\n    document.getElementById('search-results-container')?.scrollIntoView()\n    debounceYtSearch(searchQ)\n  }, [library, searchQ])\n\n  function ytSearch(q: string) {\n    youtubeSearch(q).then((results) => setYtSearchResults(results))\n  }\n  const debounceYtSearch = useCallback(debounce(ytSearch, 2500), [])\n\n  return (\n    <div className=\"box\">\n      <h1 className=\"room-heading\">{room.name}</h1>\n      {wsStatus === 'closed' ? (\n        <div className=\"list\">\n          * * * disconnected * * *\n          <ol>\n            <li className=\"list-btn\" onClick={() => setRoom(undefined)}>\n              exit room\n            </li>\n          </ol>\n        </div>\n      ) : (\n        <div className=\"list\">\n          <h2>- - - MENU - - -</h2>\n          <ol>\n            <li tabIndex={0}>\n              {showIdInput ? (\n                <div className=\"flex\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"queue song ID\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        if (/http/.test(qSongId)) {\n                          console.log('oh, i guess is URL>>', qSongId)\n                          try {\n                            const url = new URL(qSongId)\n                            const v = url.searchParams.get('v')\n                            if (v) {\n                              q(v)\n                              setQSongId('')\n                              return\n                            }\n                            if (/youtu\\.be/.test(qSongId)) {\n                              const path = url.pathname.replace('/', '')\n                              if (path) {\n                                q(path)\n                                setQSongId('')\n                                return\n                              }\n                            }\n                          } catch (e) {\n                            // :shrug:\n                          }\n                        }\n\n                        q(qSongId)\n                        setQSongId('')\n                      } else if (e.key === 'Escape') {\n                        setQSongId('')\n                        setShowIdInput(false)\n                      }\n                    }}\n                    value={qSongId}\n                    onChange={(e) => setQSongId(e.target.value)}\n                    autoFocus\n                  />\n                  <div\n                    className=\"invert-list-btn\"\n                    onClick={() => setShowIdInput(false)}\n                  >\n                    {' '}\n                    x{' '}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"list-btn\" onClick={() => setShowIdInput(true)}>\n                  queue song ID\n                </div>\n              )}\n            </li>\n            <li tabIndex={0}>\n              <div className=\"sticky\">\n                {showSearchInput ? (\n                  <div className=\"search-q\">\n                    <input\n                      className={showSearchResults ? 'search-q-input' : ''}\n                      type=\"text\"\n                      placeholder=\"search\"\n                      onKeyDown={(e) => {\n                        if (e.key === 'Escape') {\n                          setShowSearchResults(false)\n                          setShowSeachInout(false)\n                        }\n                      }}\n                      onFocus={() => setShowSearchResults(true)}\n                      value={searchQ}\n                      onChange={(e) => setSearchQ(e.target.value)}\n                      autoFocus\n                    />\n                    {showSearchResults && (\n                      <div\n                        className=\"invert-list-btn\"\n                        onClick={() => {\n                          setSearchQ('')\n                          setShowSearchResults(false)\n                          setShowSeachInout(false)\n                        }}\n                      >\n                        {' '}\n                        x{' '}\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div\n                    className=\"list-btn\"\n                    onClick={() => setShowSeachInout(true)}\n                  >\n                    {' '}\n                    search/browse{' '}\n                  </div>\n                )}\n              </div>\n              {showSearchResults && (\n                <div id=\"search-results-container\">\n                  {searchResults.length || ytSearchResulta.length ? (\n                    <>\n                      <h3 className=\"center\">\n                        - - - {searchQ ? 'local results' : 'browse'} - - -\n                      </h3>\n                      <ol className=\"search-results\">\n                        {searchResults.map((r) => (\n                          <li\n                            className=\"list-btn\"\n                            onClick={() => q(r.id)}\n                            key={`result${r.id}`}\n                          >\n                            {r.title}\n                          </li>\n                        ))}\n                      </ol>\n\n                      {ytSearchResulta.length > 0 && (\n                        <>\n                          <h3 className=\"center\">\n                            - - - youtube results - - -\n                          </h3>\n                          <ol className=\"search-results yt-results\">\n                            {ytSearchResulta.map((item) => (\n                              <li\n                                className=\"list-btn\"\n                                onClick={() => q(item.id.videoId)}\n                                key={`ytresult${item.id.videoId}`}\n                              >\n                                <div className=\"flex-responsive\">\n                                  <div className=\"img-container\">\n                                    <img\n                                      src={item.snippet.thumbnails.default.url}\n                                    />\n                                  </div>\n\n                                  {item.snippet.title}\n                                </div>\n                              </li>\n                            ))}\n                          </ol>\n                        </>\n                      )}\n\n                      <h3 className=\"center\">- - - - - - - - - -</h3>\n                    </>\n                  ) : (\n                    'no search results'\n                  )}\n                </div>\n              )}\n            </li>\n\n            <li tabIndex={0} onClick={() => setEditSinger(true)}>\n              {editSinger ? (\n                <div className=\"flex\">\n                  <input\n                    type=\"text\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        localStorage.setItem('singer', singer)\n                        setEditSinger(false)\n                      } else if (e.key === 'Escape') {\n                        setEditSinger(false)\n                      }\n                    }}\n                    autoFocus\n                    onBlur={() => setEditSinger(false)}\n                    value={singer}\n                    onChange={(e) => setSinger(e.target.value)}\n                  />\n                  <div\n                    className=\"invert-list-btn\"\n                    onClick={() => {\n                      setEditSinger(false)\n                    }}\n                  >\n                    {' '}\n                    x{' '}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"list-btn\">singer: {singer}</div>\n              )}\n            </li>\n            <li tabIndex={0} onClick={() => sendWsMessage('PlayerPause')}>\n              <div className=\"list-btn\">pause</div>\n            </li>\n            <li tabIndex={0} onClick={() => sendWsMessage('PlayerPlay')}>\n              <div className=\"list-btn\">play</div>\n            </li>\n            <li tabIndex={0} onClick={() => sendWsMessage('PlayerSkip')}>\n              <div className=\"list-btn\">skip</div>\n            </li>\n            <li tabIndex={0} onClick={() => setRoom(undefined)}>\n              <div className=\"list-btn\">exit</div>\n            </li>\n          </ol>\n\n          {queue !== undefined && (\n            <>\n              <h2>- - - QUEUE - - -</h2>\n              {queue.length === 0 && 'queue is empty...'}\n              <ol>\n                {queue.map((q, idx) => (\n                  <li key={q.id} tabIndex={0}>\n                    <div className=\"q-singer flex\">\n                      <QSinger qid={q.id} singer={q.singer} qSinger={qSinger} />\n\n                      {idx > 1 && (\n                        <div\n                          className=\"list-btn-1char\"\n                          onClick={() => qPosition(q.id, idx - 1)}\n                          title=\"move one UP in queue\"\n                        >\n                          {' '}\n                          &uarr;{' '}\n                        </div>\n                      )}\n\n                      {idx !== 0 && idx + 1 < queue.length && (\n                        <div\n                          className=\"list-btn-1char\"\n                          onClick={() => qPosition(q.id, idx + 1)}\n                          title=\"move one DOWN in queue\"\n                        >\n                          {' '}\n                          &darr;\n                        </div>\n                      )}\n\n                      {idx == 0 ? (\n                        <div title=\"CURRENTLY PLAYING\">🎤</div>\n                      ) : (\n                        <div\n                          className=\"list-btn-1char\"\n                          onClick={() => deQ(q.id)}\n                          title=\"REMOVE from queue\"\n                        >\n                          {' '}\n                          x{' '}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"q-item-title\">\n                      {q.status === 'Downloading' ? 'downloading...' : q.title}\n                    </div>\n                  </li>\n                ))}\n              </ol>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport './App.css'\nimport Landing from './pages/Landing'\nimport Room, { IRoom } from './pages/Room'\n\nfunction App() {\n    const [room, setAppRoom] = useState<IRoom | undefined>(() => {\n        const lRoom = localStorage.getItem('room')\n        console.log('lRoom:', lRoom)\n        try {\n            return lRoom ? (JSON.parse(lRoom) as IRoom) : undefined\n        } catch (e) {\n            return undefined\n        }\n    })\n\n    function setRoom(room: IRoom | undefined) {\n        console.log('uh gonna localstorage set room ;/')\n        localStorage.setItem('room', JSON.stringify(room))\n        setAppRoom(room)\n    }\n\n    return (\n        <div className=\"App\">\n            {!room ? (\n                <Landing setRoom={setRoom} />\n            ) : (\n                <Room room={room} setRoom={setRoom} />\n            )}\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}